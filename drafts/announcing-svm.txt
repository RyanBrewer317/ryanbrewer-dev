id: announcing-svm
name: Announcing the Saber VM
date: 2024-01-17
tags: 
description: 

@paragraph@
In this post I'm excited to announce the [https://github.com/RyanBrewer317/SVM](Saber Virtual Machine), or SVM.
It's a project I've been working hard on for the past month,
with fascinating properties and an in-progress MVP implementation that's
coming along well.
@end@

@subheading@
What is it?
@end@

@paragraph@
SVM is a compiler backend for functional languages.
Specifically, it is an abstract stack machine, with many possible implementations.
It takes in CPS code that's been closure-converted and hoisted,
and executes it or AOT compiles it to a native binary.
My current implementation is a naive bytecode VM in Rust, without JITing, 
mostly for rapid prototyping as the design settles.
@end@

@paragraph@
The goals of the project are safety, expressivity, and portability.
I talk more about each of these below, but a quick overview is that
safety is achieved through a carefully designed type system, and primarily includes memory safety. 
Expressivity is preserved by using runtime checks and tagging for some of the safety guarantees,
so you can use any convoluted memory scheme you want so long as you don't dereference a dangling pointer.
Finally, SVM offers portability, by being designed to be simple to implement on a variety of platforms.
@end@

@subheading@
Safety
@end@

@paragraph@
SVM 